name: Build Nightingale (linux/armv7)

on:
  push:
    branches:
      - '**'    # push 到任意分支都会触发，必要时改为特定分支或 tag
  workflow_dispatch: {}  # 支持手动触发

jobs:
  build-armv7:
    runs-on: ubuntu-latest
    env:
      GO111MODULE: on

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Determine go version from go.mod (if exists)
        id: gov
        run: |
          if [ -f go.mod ]; then
            gv=$(grep '^go ' go.mod | awk '{print $2}' || true)
            if [ -n "$gv" ]; then
              echo "go_version=$gv" >> $GITHUB_OUTPUT
            else
              echo "go_version=1.21" >> $GITHUB_OUTPUT
            fi
          else
            echo "go_version=1.21" >> $GITHUB_OUTPUT
          fi

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ steps.gov.outputs.go_version }}

      - name: Install cross compile toolchain (for CGO or linking if needed)
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends build-essential gcc-arm-linux-gnueabihf

      - name: Patch ibex ID type for armv7
        run: |
          git clone https://github.com/flashcatcloud/ibex /tmp/ibex
          cd /tmp/ibex
          git checkout v1.3.5   # 或相应版本
          # 下面只是示例替换（请根据实际源码调整）
          sed -i 's/const IDINITIAL = 4294967296/const IDINITIAL uint64 = 4294967296/' src/storage/redis.go
          # copy patched module into repo and use local replace
          cp -r /tmp/ibex $GITHUB_WORKSPACE/third_party/ibex
      - name: go mod edit replace
        run: go mod edit -replace=github.com/flashcatcloud/ibex=./third_party/ibex


      - name: Prepare dist directory
        run: mkdir -p dist

      - name: Detect commands under ./cmd and build for linux/arm (armv7)
        run: |
          set -euo pipefail
          echo "Building for linux/arm (GOARM=7)"
          # disable CGO by default for simpler static-like builds; change CGO_ENABLED=1 below if needed
          export GOOS=linux
          export GOARCH=arm
          export GOARM=7
          export CGO_ENABLED=0

          # If repository has multiple cmd/* binaries, build all; otherwise fallback to single target
          if [ -d "./cmd" ]; then
            for d in ./cmd/*; do
              if [ -d "$d" ]; then
                name=$(basename "$d")
                echo "Building $name ..."
                go build -v -o "dist/${name}-linux-armv7" "./cmd/${name}" || { echo "build ${name} failed"; exit 1; }
                file "dist/${name}-linux-armv7"
              fi
            done
          else
            # fallback: try to build main package
            go build -v -o "dist/n9e-linux-armv7" ./... || { echo "fallback build failed"; exit 1; }
            file "dist/n9e-linux-armv7"
          fi

      - name: List dist
        run: ls -la dist || true

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: nightingale-armv7
          path: dist/**
